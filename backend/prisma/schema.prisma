// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(uuid())
  name           String
  email          String         @unique
  socialId       String         @unique
  picture        String
  signInPlatform SignInPlatform
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  Game           Game[]         @relation("winner")
  WhiteGame      Game[]         @relation("GamesAsWhite")
  BlackGame      Game[]         @relation("GamesAsBlack")
}

model Game {
  id           String      @id @default(uuid())
  pgn          String
  wUser        User        @relation("GamesAsWhite", fields: [wUserId], references: [id])
  bUser        User        @relation("GamesAsBlack", fields: [bUserId], references: [id])
  wUserId      String
  bUserId      String
  winner       User?       @relation("winner", fields: [winnerUserId], references: [id])
  winnerUserId String?
  status       GameStatus
  result       GameResult?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

enum SignInPlatform {
  google
}

enum GameStatus {
  IN_PROGRESS
  COMPLETED
  ABANDONED
  TIME_UP
}

enum GameResult {
  DRAW_BY_THREEFOLD_REPETITION
  DRAW_BY_FIFTY_MOVE_RULE
  DRAW_BY_INSUFFICIENT_MATERIAL
  STALEMATE
  CHECKMATE
  RESIGNATION
  TIMEOUT
  ABORT
  DRAW_BY_AGREEMENT
}
